AP Formula : Sn = n/2(2a + (n-1)d)

subset count

odd even single formula

Total number of possible Binary Search Trees with n different keys
Catalan number Cn = (2n)!/(n+1)!*n! : 2nCn / (n + 1)

Triangle area
area = abs(0.5 * (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)))

arc angle
math.degrees(math.atan2(p[1] - loc[1], p[0] - loc[0])))

find median from sorted list (odd and even)
medianList.append((sortedList[(k - 1) // 2] + sortedList[k // 2]) / 2)

For a matrix, diff of indices are same for diagonal (left to right)
sum of indices are same for diagonal (right to left)

A set of n can have 2^n subsets. (power subset)

To get sorted key in dict, loop from min(keys) to max(keys).

When we subtract a number by 1 and do bitwise & with itself (n & (n-1)), we unset the rightmost set bit

For a given array, if we create all possible subarray. Number at i-th index will have (i + 1) * (N - i) frequency.

i += i & (-i); Add 1 to last set bit of i
i -= i & (-i); Subtract 1 from last set bit of i

It is known for a string of length n, there are a total of n*(n+1)/2 number of substrings.

Let Points be A and B. So line can be represent by : c1 = a1*A.x + b1*A.y
where a1 = B.y - A.y; b1 = A.x - B.x
Now find determinant b/w lines
determinant = float(a1*b2 - a2*b1)
To find intersecting points :
if determinant == 0: print ("Given lines are parallel")
else: x = (b2*c1 - b1*c2) / determinant; y = (a1*c2 - a2*c1) / determinant

Recall the quadratic formula:
x = [-b +- sqrt(b^2 - 4ac)] / 2a


